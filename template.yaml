AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  StageName:
    Type: String
    Description: The stage name for the deployment

Resources:
  Function1:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: 'src/function1/index.handler'
      Runtime: 'nodejs18.x'
      FunctionName: !Sub 'Function1-${StageName}'

  Function2:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: 'src/function2/index.handler'
      Runtime: 'nodejs18.x'
      FunctionName: !Sub 'Function2-${StageName}'

  ApiGatewayStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      StageName: !Ref StageName
      RestApiId: 
        Fn::ImportValue: AEBApiGatewayId
      DeploymentId: !Ref ApiGatewayDeployment

  ApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - Function1ApiMethod
      - Function2ApiMethod
    Properties:
      RestApiId: 
        Fn::ImportValue: AEBApiGatewayId

  Function1ApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: 
        Fn::ImportValue: AEBApiGatewayId
      ParentId: 
        Fn::ImportValue: AEBApiGatewayRootResourceId
      PathPart: !Sub '${StageName}-function1'

  Function1ApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: 
        Fn::ImportValue: AEBApiGatewayId
      ResourceId: !Ref Function1ApiResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
          - FunctionArn: !GetAtt Function1.Arn

  Function2ApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: 
        Fn::ImportValue: AEBApiGatewayId
      ParentId: 
        Fn::ImportValue: AEBApiGatewayRootResourceId
      PathPart: !Sub '${StageName}-function2'

  Function2ApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: 
        Fn::ImportValue: AEBApiGatewayId
      ResourceId: !Ref Function2ApiResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
          - FunctionArn: !GetAtt Function2.Arn

  Function1Permission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref Function1
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/${StageName}-function1/*
        - ApiId:
            Fn::ImportValue: AEBApiGatewayId

  Function2Permission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref Function2
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/${StageName}-function2/*
        - ApiId:
            Fn::ImportValue: AEBApiGatewayId

Outputs:
  ApiGatewayUrl:
    Value: !Sub 
      - "https://${ApiId}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/"
      - ApiId: 
          Fn::ImportValue: AEBApiGatewayId
    Description: "URL for API Gateway"