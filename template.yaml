AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  StageName:
    Type: String
    Description: The stage name for the deployment

Resources:
  Function1:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: 'index.handler'
      Runtime: 'nodejs18.x'
      FunctionName: !Sub 'Function1-${StageName}'
      InlineCode: |
        exports.handler = async (event) => {
          return {
            statusCode: 200,
            body: JSON.stringify({ message: "Hello from Function1!" }),
          };
        };

  Function2:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: 'index.handler'
      Runtime: 'nodejs18.x'
      FunctionName: !Sub 'Function2-${StageName}'
      InlineCode: |
        exports.handler = async (event) => {
          return {
            statusCode: 200,
            body: JSON.stringify({ message: "Hello from Function2!" }),
          };
        };

  ApiGateway:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: !Ref StageName
      EndpointConfiguration: REGIONAL
      DefinitionBody:
        swagger: '2.0'
        info:
          title: !Ref 'AWS::StackName'
        paths:
          /function1:
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function1.Arn}/invocations
          /function2:
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${Function2.Arn}/invocations

  Function1Permission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref Function1
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/${StageName}/*/function1'

  Function2Permission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref Function2
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/${StageName}/*/function2'

Outputs:
  ApiGatewayUrl:
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/'
    Description: "URL for API Gateway"