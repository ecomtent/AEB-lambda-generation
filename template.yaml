AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  StageName:
    Type: String
    Description: The stage name for the deployment (e.g., main, staging, feature-*)

Resources:
  SharedApiGateway:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: 'dummy'  # We'll create actual stages separately
      EndpointConfiguration: REGIONAL

  ApiGatewayStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref SharedApiGatewayDeployment
      RestApiId: !Ref SharedApiGateway
      StageName: !Ref StageName

  SharedApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: 
      - Function1ApiEvent
      - Function2ApiEvent
    Properties:
      RestApiId: !Ref SharedApiGateway

  Function1:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: ./src/function1
      AutoPublishAlias: !Ref StageName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref SharedApiGateway
            Path: /function1
            Method: GET

  Function2:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: ./src/function2
      AutoPublishAlias: !Ref StageName
      Events:
        ApiEvent:
          Type: Api
          Properties:
            RestApiId: !Ref SharedApiGateway
            Path: /function2
            Method: GET

  Function1ApiEvent:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref SharedApiGateway
      ResourceId: !GetAtt SharedApiGateway.RootResourceId
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}:${StageName}/invocations
          - FunctionArn: !GetAtt Function1.Arn

  Function2ApiEvent:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref SharedApiGateway
      ResourceId: !GetAtt SharedApiGateway.RootResourceId
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}:${StageName}/invocations
          - FunctionArn: !GetAtt Function2.Arn

Outputs:
  ApiGatewayUrl:
    Value: !Sub 'https://${SharedApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/'
    Description: "URL for API Gateway"
  Function1Arn:
    Value: !GetAtt [Function1, Arn]
    Description: "ARN of Function1"
  Function2Arn:
    Value: !GetAtt [Function2, Arn]
    Description: "ARN of Function2"